createPasswords: false  # XXX only ever set to true one time (first time)!!!

validators:
  defaultRegistry: registry.chutes.ai:5000
  defaultApi: https://api.chutes.ai
  supported:
    - hotkey: 5DCJTfVx3ReNyxW3SgQEKFgvXFuqnK3BNW1vMhTQK4jdZbV4
      registry: registry.chutes.ai:5000
      api: https://api.chutes.ai
      socket: wss://ws.chutes.ai

porter:
  enabled: true
  service:
    nodePort: 31000
    port: 8000
    targetPort: 8000
  real_host: 1.2.3.4
  real_port: 32000
  image: parachutes/porter:latest
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "250m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "128Mi"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: chutes-porter
            operator: In
            values:
              - "true"

minerApi:
  image: parachutes/miner:latest
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "1"
      memory: "4Gi"
    limits:
      cpu: "1"
      memory: "4Gi"
  service:
    type: NodePort
    nodePort: 32000
    port: 8000
    targetPort: 8000
  nodeSelector: {}
  affinity:
    nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: nvidia.com/gpu.present
              operator: NotIn
              values: ["true"]
  tolerations: []
  annotations: {}
  labels:
    app: miner

postgres:
  image: postgres:15
  imagePullPolicy: IfNotPresent
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 100Gi
    storageClass: ""
  resources:
    requests:
      cpu: "1"
      memory: "4Gi"
    limits:
      cpu: "1"
      memory: "4Gi"
  database:
    name: chutes
    user: chutes
    passwordKey: "postgres-password"
  service:
    type: ClusterIP
    port: 5432
    targetPort: 5432
  nodeSelector: {}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nvidia.com/gpu.present
            operator: NotIn
            values: ["true"]
  tolerations: []
  annotations: {}
  labels:
    app: postgres

redis:
  image: redis:7
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  nodeSelector: {}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nvidia.com/gpu.present
            operator: NotIn
            values: ["true"]
  tolerations: []
  resources:
    requests:
      cpu: 1
      memory: 1Gi
    limits:
      cpu: 1
      memory: 1Gi
  service:
    type: ClusterIP
    port: 6379
  password:
    passwordKey: "redis-password"
  config:
    customArgs: []
  persistence:
    enabled: false
    accessMode: ReadWriteOnce
    size: 10Gi
    storageClass: ""

registry:
  image: nginx:1.25
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  service:
    type: ClusterIP
    port: 5000
    targetPort: 5000
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nvidia.com/gpu.present
            operator: NotIn
            values: ["true"]
  nodeSelector: {}
  tolerations: []
  config:
    workerProcesses: 1
    workerConnections: 1024
    keepaliveTimeout: 65
    clientMaxBodySize: "0"
    validators:
      headerName: "X-Registry-Upstream"
      allowedHosts:
        - "registry.chutes.ai:5000"
      defaultUpstream: "registry.chutes.ai:5000"

squid:
  image: "ubuntu/squid:5.2-22.04_beta"
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  service:
    type: ClusterIP
    port: 3128
  resources:
    requests:
      cpu: 2
      memory: 16Gi
    limits:
      cpu: 2
      memory: 16Gi
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nvidia.com/gpu.present
            operator: NotIn
            values: ["true"]
  nodeSelector: {}
  tolerations: []
  config:
    allowedNetworks:
      - 10.0.0.0/8
      - 172.16.0.0/12
      - 192.168.0.0/16
    maxRequestSize: 100000 MB
    cacheSize: 8192  # GB
    diskCache:
      size: 2000000  # MB
      level1: 1024
      level2: 256
    readAheadSize: 1048576
    bufferSize: 1048576
    workerThreads: 32
    pipelineRequests: 32
    refreshPatterns:
      - pattern: "\\.safetensors$"
        min: 10080  # 7 days
        percent: 100
        max: 43200  # 30 days
      - pattern: "\\.bin$"
        min: 10080
        percent: 100
        max: 43200
      - pattern: "\\.pt$"
        min: 10080
        percent: 100
        max: 43200
      - pattern: "\\.pth$"
        min: 10080
        percent: 100
        max: 43200
      - pattern: "\\.ckpt$"
        min: 10080
        percent: 100
        max: 43200
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 2100Gi
    storageClass: ""
