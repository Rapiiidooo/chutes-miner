createPasswords: true  # XXX only ever set to true one time (first time)!!!

hfCache:
  maxAgeDays: 7
  maxSizeGB: 500

validators:
  defaultRegistry: https://registry.chutes.ai
  defaultApi: https://api.chutes.ai
  supported:
    - hotkey: 5HNCJfK3PzFcNHmkdaWnHyw7hEvtNoM4SZpoqB6QchzpFxT5
      registry: https://registry.chutes.ai
      api: https://api.chutes.ai
      socket: wss://ws.chutes.ai

porter:
  enabled: true
  service:
    nodePort: 31000
    port: 8000
    targetPort: 8000
  real_host: 1.2.3.4
  real_port: 32000
  image: parachutes/porter:latest
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "250m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "128Mi"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: chutes-porter
            operator: In
            values:
              - "true"

minerApi:
  image: parachutes/miner:latest
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "1"
      memory: "4Gi"
    limits:
      cpu: "1"
      memory: "4Gi"
  service:
    type: NodePort
    nodePort: 32000
    port: 8000
    targetPort: 8000
  nodeSelector: {}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nvidia.com/gpu.present
            operator: NotIn
            values: ["true"]
          - key: chutes-porter
            operator: NotIn
            values:
              - "true"
  tolerations: []


squid:
  image: ubuntu/squid:5.2-22.04_beta
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "1"
      memory: "4Gi"
    limits:
      cpu: "1"
      memory: "4Gi"
  service:
    port: 3128
  nodeSelector:
    nvidia.com/gpu.present: "true"

gepetto:
  image: parachutes/miner:latest
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "1"
      memory: "4Gi"
    limits:
      cpu: "1"
      memory: "4Gi"
  nodeSelector: {}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nvidia.com/gpu.present
            operator: NotIn
            values: ["true"]
          - key: chutes-porter
            operator: NotIn
            values:
              - "true"
  tolerations: []

postgres:
  image: postgres:16
  imagePullPolicy: IfNotPresent
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 100Gi
    storageClass: microk8s-hostpath
  resources:
    requests:
      cpu: "1"
      memory: "4Gi"
    limits:
      cpu: "1"
      memory: "4Gi"
  database:
    name: chutes
    user: chutes
    passwordKey: "postgres-password"
  service:
    type: ClusterIP
    port: 5432
    targetPort: 5432
  nodeSelector: {}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nvidia.com/gpu.present
            operator: NotIn
            values: ["true"]
          - key: chutes-porter
            operator: NotIn
            values:
              - "true"
  tolerations: []

redis:
  image: redis:7
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  nodeSelector: {}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nvidia.com/gpu.present
            operator: NotIn
            values: ["true"]
          - key: chutes-porter
            operator: NotIn
            values:
              - "true"
  tolerations: []
  resources:
    requests:
      cpu: 1
      memory: 1Gi
    limits:
      cpu: 1
      memory: 1Gi
  service:
    type: ClusterIP
    port: 6379
  password:
    passwordKey: "redis-password"
  config:
    customArgs: []
  persistence:
    enabled: false
    accessMode: ReadWriteOnce
    size: 10Gi
    storageClass: microk8s-hostpath

registry:
  image: nginx:1.27
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  service:
    type: ClusterIP
    port: 5000
    targetPort: 5000
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nvidia.com/gpu.present
            operator: NotIn
            values: ["true"]
          - key: chutes-porter
            operator: NotIn
            values:
              - "true"
  nodeSelector: {}
  tolerations: []
  config:
    workerProcesses: 1
    workerConnections: 1024
    keepaliveTimeout: 65
    clientMaxBodySize: "0"
    validators:
      allowedHosts:
        - "registry.chutes.ai"
      defaultUpstream: "registry.chutes.ai"
