{{ if .Values.prometheus.propagationPolicies.create }}
---
apiVersion: policy.karmada.io/v1alpha1
kind: PropagationPolicy

metadata:
  name: monitoring
  namespace: {{ $.Release.Namespace }}
spec:
  conflictResolution: Overwrite
  resourceSelectors:
    - apiVersion: v1
      kind: ConfigMap
      name: prometheus-conf
    - apiVersion: v1
      kind: ConfigMap
      name: prometheus-server
    - apiVersion: apps/v1
      kind: Deployment
      name: prometheus-server
    - apiVersion: v1
      kind: ServiceAccount
      name: prometheus-server
    - apiVersion: v1
      kind: Service
      name: prometheus-server
    - apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      name: prometheus-access
  placement:
    clusterAffinity:
      clusterNames: []  # Empty array means propagate to all registered clusters
    replicaScheduling:
      replicaSchedulingType: Duplicated  # Alternative: Duplicated
---
apiVersion: policy.karmada.io/v1alpha1
kind: ClusterPropagationPolicy

metadata:
  name: prometheus
  namespace: {{ $.Release.Namespace }}
spec:
  conflictResolution: Overwrite
  resourceSelectors:
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: prometheus-server
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: prometheus-server
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: prometheus-service-discovery
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: prometheus-service-discovery
    - apiVersion: v1
      kind: PersistentVolumeClaim
      name: prometheus-server
  placement:
    clusterAffinity:
      clusterNames: []  # Empty array means propagate to all registered clusters
    replicaScheduling:
      replicaSchedulingType: Duplicated  # Alternative: Duplicated
{{- end }}